package leetcode;

import java.util.Arrays;

public class solution {
	
	 public static int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {
		int[] diff_array = new int[capacity.length];  
		 int count =0,remaining_rocks=0;
		 Arrays.sort(capacity);
		 Arrays.sort(rocks);

		   for (int i=0; i<capacity.length;i++){
		          diff_array[i]=capacity[i]-rocks[i];
		   }
		   
           Arrays.sort(diff_array);
           for (int j=0; j<diff_array.length;j++) {
        	   if (diff_array[j] >0 && additionalRocks>0){
        		   remaining_rocks = additionalRocks-diff_array[j];
        		     count++;
        		           
        		   }
        	 
        		          else if(diff_array[j]==0) {
        		          count++;         
        		                   
        		           }
	   
           }

		            
		     return count;       
		        
		}
	 
	 public static void main(String[] args) {
		
		 int[] capacity = {91,54,63,99,24,45,78};					
		 int[] rocks = {35,32,45,98,6,1,25};
		 int add_rocks = 17;
		 
		 System.out.println(maximumBags(capacity, rocks, add_rocks));
		 
		 
		 
		 
	}

}
