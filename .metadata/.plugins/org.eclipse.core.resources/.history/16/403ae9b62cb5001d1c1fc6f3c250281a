import java.util.Arrays;
import java.util.stream.IntStream;

public class solution {
	
	 public static int maxProfit(int[] prices) {
		 
		 int min_price = Arrays.stream(prices).min().getAsInt();
		 int index = IntStream.range(0, prices.length)
				 .filter(i -> min_price==prices[i])
				 .findFirst().orElse(-1); //Returns index of element using stream api
		 int max_price =Integer.MAX_VALUE;
		 
		 for (int i=index; i<prices.length;i++) {
			 if (index ==prices.length-1) { 
				 return 0;
			 }
			 
			 max_price = Math.max(max_price, prices[i]);
			 
		 }
	        
		 return max_price-min_price;
 }
	 
	 
	 public static void main(String[] args) {
		
		 int[] prices = {7,1,5,3,6,4};
		 
		 System.out.println(maxProfit(prices));
		 
	}

}
